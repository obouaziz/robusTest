// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// max2D_cpp
double max2D_cpp(NumericVector const& x, NumericVector const& y);
RcppExport SEXP _robusTest_max2D_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector const& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(max2D_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// spearmanCore
List spearmanCore(const NumericVector& x, const NumericVector& y);
RcppExport SEXP _robusTest_spearmanCore(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(spearmanCore(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_robusTest_max2D_cpp", (DL_FUNC) &_robusTest_max2D_cpp, 2},
    {"_robusTest_spearmanCore", (DL_FUNC) &_robusTest_spearmanCore, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_robusTest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
